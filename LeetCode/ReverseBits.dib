#!markdown

Reverse bits of a given 32 bits unsigned integer.

 

Example 1:

Input: 00000010100101000001111010011100
Output: 00111001011110000010100101000000
Explanation: The input binary string 00000010100101000001111010011100 represents the unsigned integer 43261596, so return 964176192 which its binary representation is 00111001011110000010100101000000.
Example 2:

Input: 11111111111111111111111111111101
Output: 10111111111111111111111111111111
Explanation: The input binary string 11111111111111111111111111111101 represents the unsigned integer 4294967293, so return 3221225471 which its binary representation is 10111111111111111111111111111111.

#!markdown

https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/bitwise-and-shift-operators#left-shift-operator-

#!csharp

public class Solution {
    public static ulong reverseBits(uint n) {

        uint result =0;
        //Console.WriteLine($"{result} {n}");


        
        for(var i =0; i < 32; ++i)
        {
            result = (result << 1) + (n & 1);
            n = n >>1;
        }
        return result;
    }
    
}

Console.WriteLine($"{Solution.reverseBits(43261596)} {964176192}");

#!markdown

without conversion functions
